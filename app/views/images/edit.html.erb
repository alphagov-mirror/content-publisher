<%
title_key = rendering_context == "modal" ? "images.edit.title_modal" : "images.edit.title"
content_for :title, t(title_key, title: @edition.title_or_fallback)
%>

<% back_link_path = if params[:wizard] == 'upload'
                      crop_image_path(@edition.document, @image_revision.image_id, wizard: params[:wizard])
                    else
                      images_path(@edition.document)
                    end %>

<% content_for :back_link, render_back_link(
  href: back_link_path,
  data_attributes: { "modal-action": "metaBack" }
) %>

<%= render "components/image_meta", {
  id: "selected-image",
  src: url_for(@image_revision.thumbnail),
  alt_text: @image_revision.alt_text || t("images.edit.alt_text_placeholder"),
  no_border: true
} %>

<%= form_tag(
  edit_image_path(@edition.document, @image_revision.image_id, wizard: params[:wizard]),
  method: :patch,
  class: "app-c-contextual-guidance__form",
  data: {
    "warn-before-unload": true,
    "modal-action": (params[:wizard] == "upload") ? "metaInsert": "meta",
    "modal-data": t("images.index.meta.inline_code.value", filename: @image_revision.filename),
    gtm: "save-image-metadata"
  }
) do %>
  <%= render "govuk_publishing_components/components/contextual_guidance", {
    id: "alt-text",
    html_for: "image-alt-text",
    title: t("images.edit.form_labels.alt_text"),
    content: render_govspeak(t("images.edit.guidance.alt_text_govspeak")),
    guidance_id: "image-alt-text-guidance"
  } do %>
    <%= render "govuk_publishing_components/components/input", {
      label: {
        text: t("images.edit.form_labels.alt_text"),
        bold: true
      },
      id: "image-alt-text",
      name: "image_revision[alt_text]",
      value: params.dig(:image_revision, :alt_text) || @image_revision.alt_text,
      error_items: @issues&.items_for(:alt_text),
      describedby: "image-alt-text-guidance"
    } %>
  <% end %>

  <%= render "govuk_publishing_components/components/contextual_guidance", {
    id: "caption",
    html_for: "image-caption",
    title: t("images.edit.form_labels.caption"),
    content: render_govspeak(t("images.edit.guidance.caption_govspeak")),
    guidance_id: "image-caption-guidance"
  } do %>
    <%= render "govuk_publishing_components/components/input", {
      label: {
        text: t("images.edit.form_labels.caption"),
        bold: true
      },
      id: "image-caption",
      name: "image_revision[caption]",
      value: params.dig(:image_revision, :caption) || @image_revision.caption,
      error_items: @issues&.items_for(:caption),
      describedby: "image-caption-guidance"
    } %>
  <% end %>

  <%= render "govuk_publishing_components/components/contextual_guidance", {
    id: "credit",
    html_for: "image-credit",
    title: t("images.edit.form_labels.credit"),
    content: render_govspeak(t("images.edit.guidance.credit_govspeak")),
    guidance_id: "image-credit-guidance"
  } do %>
    <%= render "govuk_publishing_components/components/input", {
      label: {
        text: t("images.edit.form_labels.credit"),
        bold: true
      },
      id: "image-credit",
      name: "image_revision[credit]",
      value: params.dig(:image_revision, :credit) || @image_revision.credit,
      error_items: @issues&.items_for(:credit),
      describedby: "image-credit-guidance"
    } %>
  <% end %>

  <% unless rendering_context == "modal" %>
    <% is_lead = params[:lead_image] || (@edition.lead_image_revision == @image_revision) %>

    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">
        <%= render "govuk_publishing_components/components/checkboxes", {
          items: [
            {
              label: t("images.edit.form_labels.lead_image"),
              checked: is_lead,
              name: "lead_image",
              data_attributes: {
                gtm: "is-lead-image",
                "gtm-value": t("images.edit.form_labels.lead_image")
              }
            }
          ]
        } %>
      </div>
    </div>
  <% end %>

  <%= render "govuk_publishing_components/components/button", {
    margin_bottom: true,
    text: (rendering_context == "modal" && params[:wizard] == "upload") ? "Save and insert" : "Save",
  } %>
<% end %>
